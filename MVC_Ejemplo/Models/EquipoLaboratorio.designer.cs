#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_Ejemplo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EquipoLaboratorio")]
	public partial class EquipoLaboratorioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertEquipo(Equipo instance);
    partial void UpdateEquipo(Equipo instance);
    partial void DeleteEquipo(Equipo instance);
    partial void InsertLaboratorio(Laboratorio instance);
    partial void UpdateLaboratorio(Laboratorio instance);
    partial void DeleteLaboratorio(Laboratorio instance);
    partial void InsertRelacionEquipo_Cat_Lab(RelacionEquipo_Cat_Lab instance);
    partial void UpdateRelacionEquipo_Cat_Lab(RelacionEquipo_Cat_Lab instance);
    partial void DeleteRelacionEquipo_Cat_Lab(RelacionEquipo_Cat_Lab instance);
    #endregion
		
		public EquipoLaboratorioDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EquipoLaboratorioConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EquipoLaboratorioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EquipoLaboratorioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EquipoLaboratorioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EquipoLaboratorioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Equipo> Equipos
		{
			get
			{
				return this.GetTable<Equipo>();
			}
		}
		
		public System.Data.Linq.Table<Laboratorio> Laboratorios
		{
			get
			{
				return this.GetTable<Laboratorio>();
			}
		}
		
		public System.Data.Linq.Table<RelacionEquipo_Cat_Lab> RelacionEquipo_Cat_Labs
		{
			get
			{
				return this.GetTable<RelacionEquipo_Cat_Lab>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Categoria;
		
		private string _NombreCategoria;
		
		private string _Comentarios;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaModificacion;
		
		private EntitySet<RelacionEquipo_Cat_Lab> _RelacionEquipo_Cat_Labs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_CategoriaChanging(int value);
    partial void OnId_CategoriaChanged();
    partial void OnNombreCategoriaChanging(string value);
    partial void OnNombreCategoriaChanged();
    partial void OnComentariosChanging(string value);
    partial void OnComentariosChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaModificacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaModificacionChanged();
    #endregion
		
		public Categoria()
		{
			this._RelacionEquipo_Cat_Labs = new EntitySet<RelacionEquipo_Cat_Lab>(new Action<RelacionEquipo_Cat_Lab>(this.attach_RelacionEquipo_Cat_Labs), new Action<RelacionEquipo_Cat_Lab>(this.detach_RelacionEquipo_Cat_Labs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Categoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Categoria
		{
			get
			{
				return this._Id_Categoria;
			}
			set
			{
				if ((this._Id_Categoria != value))
				{
					this.OnId_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._Id_Categoria = value;
					this.SendPropertyChanged("Id_Categoria");
					this.OnId_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCategoria", DbType="NVarChar(MAX)")]
		public string NombreCategoria
		{
			get
			{
				return this._NombreCategoria;
			}
			set
			{
				if ((this._NombreCategoria != value))
				{
					this.OnNombreCategoriaChanging(value);
					this.SendPropertyChanging();
					this._NombreCategoria = value;
					this.SendPropertyChanged("NombreCategoria");
					this.OnNombreCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentarios", DbType="NVarChar(MAX)")]
		public string Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				if ((this._Comentarios != value))
				{
					this.OnComentariosChanging(value);
					this.SendPropertyChanging();
					this._Comentarios = value;
					this.SendPropertyChanged("Comentarios");
					this.OnComentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_RelacionEquipo_Cat_Lab", Storage="_RelacionEquipo_Cat_Labs", ThisKey="Id_Categoria", OtherKey="Id_Categoria")]
		public EntitySet<RelacionEquipo_Cat_Lab> RelacionEquipo_Cat_Labs
		{
			get
			{
				return this._RelacionEquipo_Cat_Labs;
			}
			set
			{
				this._RelacionEquipo_Cat_Labs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RelacionEquipo_Cat_Labs(RelacionEquipo_Cat_Lab entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_RelacionEquipo_Cat_Labs(RelacionEquipo_Cat_Lab entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipo")]
	public partial class Equipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Equipo;
		
		private string _NombreEquipo;
		
		private string _Modelo;
		
		private string _Categoria;
		
		private string _Laboratorio;
		
		private string _Comentarios;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaModificacion;
		
		private EntitySet<RelacionEquipo_Cat_Lab> _RelacionEquipo_Cat_Labs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_EquipoChanging(int value);
    partial void OnId_EquipoChanged();
    partial void OnNombreEquipoChanging(string value);
    partial void OnNombreEquipoChanged();
    partial void OnModeloChanging(string value);
    partial void OnModeloChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnLaboratorioChanging(string value);
    partial void OnLaboratorioChanged();
    partial void OnComentariosChanging(string value);
    partial void OnComentariosChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaModificacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaModificacionChanged();
    #endregion
		
		public Equipo()
		{
			this._RelacionEquipo_Cat_Labs = new EntitySet<RelacionEquipo_Cat_Lab>(new Action<RelacionEquipo_Cat_Lab>(this.attach_RelacionEquipo_Cat_Labs), new Action<RelacionEquipo_Cat_Lab>(this.detach_RelacionEquipo_Cat_Labs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Equipo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Equipo
		{
			get
			{
				return this._Id_Equipo;
			}
			set
			{
				if ((this._Id_Equipo != value))
				{
					this.OnId_EquipoChanging(value);
					this.SendPropertyChanging();
					this._Id_Equipo = value;
					this.SendPropertyChanged("Id_Equipo");
					this.OnId_EquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreEquipo", DbType="NVarChar(MAX)")]
		public string NombreEquipo
		{
			get
			{
				return this._NombreEquipo;
			}
			set
			{
				if ((this._NombreEquipo != value))
				{
					this.OnNombreEquipoChanging(value);
					this.SendPropertyChanging();
					this._NombreEquipo = value;
					this.SendPropertyChanged("NombreEquipo");
					this.OnNombreEquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="NVarChar(MAX)")]
		public string Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this.OnModeloChanging(value);
					this.SendPropertyChanging();
					this._Modelo = value;
					this.SendPropertyChanged("Modelo");
					this.OnModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NVarChar(MAX)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Laboratorio", DbType="NVarChar(MAX)")]
		public string Laboratorio
		{
			get
			{
				return this._Laboratorio;
			}
			set
			{
				if ((this._Laboratorio != value))
				{
					this.OnLaboratorioChanging(value);
					this.SendPropertyChanging();
					this._Laboratorio = value;
					this.SendPropertyChanged("Laboratorio");
					this.OnLaboratorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentarios", DbType="NVarChar(MAX)")]
		public string Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				if ((this._Comentarios != value))
				{
					this.OnComentariosChanging(value);
					this.SendPropertyChanging();
					this._Comentarios = value;
					this.SendPropertyChanged("Comentarios");
					this.OnComentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_RelacionEquipo_Cat_Lab", Storage="_RelacionEquipo_Cat_Labs", ThisKey="Id_Equipo", OtherKey="Id_Equipo")]
		public EntitySet<RelacionEquipo_Cat_Lab> RelacionEquipo_Cat_Labs
		{
			get
			{
				return this._RelacionEquipo_Cat_Labs;
			}
			set
			{
				this._RelacionEquipo_Cat_Labs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RelacionEquipo_Cat_Labs(RelacionEquipo_Cat_Lab entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = this;
		}
		
		private void detach_RelacionEquipo_Cat_Labs(RelacionEquipo_Cat_Lab entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laboratorios")]
	public partial class Laboratorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Laboratorios;
		
		private string _NombreLaboratorio;
		
		private System.Nullable<int> _Salon;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaModificacion;
		
		private EntitySet<RelacionEquipo_Cat_Lab> _RelacionEquipo_Cat_Labs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_LaboratoriosChanging(int value);
    partial void OnId_LaboratoriosChanged();
    partial void OnNombreLaboratorioChanging(string value);
    partial void OnNombreLaboratorioChanged();
    partial void OnSalonChanging(System.Nullable<int> value);
    partial void OnSalonChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaModificacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaModificacionChanged();
    #endregion
		
		public Laboratorio()
		{
			this._RelacionEquipo_Cat_Labs = new EntitySet<RelacionEquipo_Cat_Lab>(new Action<RelacionEquipo_Cat_Lab>(this.attach_RelacionEquipo_Cat_Labs), new Action<RelacionEquipo_Cat_Lab>(this.detach_RelacionEquipo_Cat_Labs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Laboratorios", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Laboratorios
		{
			get
			{
				return this._Id_Laboratorios;
			}
			set
			{
				if ((this._Id_Laboratorios != value))
				{
					this.OnId_LaboratoriosChanging(value);
					this.SendPropertyChanging();
					this._Id_Laboratorios = value;
					this.SendPropertyChanged("Id_Laboratorios");
					this.OnId_LaboratoriosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreLaboratorio", DbType="NVarChar(MAX)")]
		public string NombreLaboratorio
		{
			get
			{
				return this._NombreLaboratorio;
			}
			set
			{
				if ((this._NombreLaboratorio != value))
				{
					this.OnNombreLaboratorioChanging(value);
					this.SendPropertyChanging();
					this._NombreLaboratorio = value;
					this.SendPropertyChanged("NombreLaboratorio");
					this.OnNombreLaboratorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salon", DbType="Int")]
		public System.Nullable<int> Salon
		{
			get
			{
				return this._Salon;
			}
			set
			{
				if ((this._Salon != value))
				{
					this.OnSalonChanging(value);
					this.SendPropertyChanging();
					this._Salon = value;
					this.SendPropertyChanged("Salon");
					this.OnSalonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laboratorio_RelacionEquipo_Cat_Lab", Storage="_RelacionEquipo_Cat_Labs", ThisKey="Id_Laboratorios", OtherKey="Id_Laboratorios")]
		public EntitySet<RelacionEquipo_Cat_Lab> RelacionEquipo_Cat_Labs
		{
			get
			{
				return this._RelacionEquipo_Cat_Labs;
			}
			set
			{
				this._RelacionEquipo_Cat_Labs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RelacionEquipo_Cat_Labs(RelacionEquipo_Cat_Lab entity)
		{
			this.SendPropertyChanging();
			entity.Laboratorio = this;
		}
		
		private void detach_RelacionEquipo_Cat_Labs(RelacionEquipo_Cat_Lab entity)
		{
			this.SendPropertyChanging();
			entity.Laboratorio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelacionEquipo_Cat_Lab")]
	public partial class RelacionEquipo_Cat_Lab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Relacion;
		
		private System.Nullable<int> _Id_Categoria;
		
		private System.Nullable<int> _Id_Equipo;
		
		private System.Nullable<int> _Id_Laboratorios;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaModificacion;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Equipo> _Equipo;
		
		private EntityRef<Laboratorio> _Laboratorio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RelacionChanging(int value);
    partial void OnId_RelacionChanged();
    partial void OnId_CategoriaChanging(System.Nullable<int> value);
    partial void OnId_CategoriaChanged();
    partial void OnId_EquipoChanging(System.Nullable<int> value);
    partial void OnId_EquipoChanged();
    partial void OnId_LaboratoriosChanging(System.Nullable<int> value);
    partial void OnId_LaboratoriosChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaModificacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaModificacionChanged();
    #endregion
		
		public RelacionEquipo_Cat_Lab()
		{
			this._Categoria = default(EntityRef<Categoria>);
			this._Equipo = default(EntityRef<Equipo>);
			this._Laboratorio = default(EntityRef<Laboratorio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Relacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Relacion
		{
			get
			{
				return this._Id_Relacion;
			}
			set
			{
				if ((this._Id_Relacion != value))
				{
					this.OnId_RelacionChanging(value);
					this.SendPropertyChanging();
					this._Id_Relacion = value;
					this.SendPropertyChanged("Id_Relacion");
					this.OnId_RelacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Categoria", DbType="Int")]
		public System.Nullable<int> Id_Categoria
		{
			get
			{
				return this._Id_Categoria;
			}
			set
			{
				if ((this._Id_Categoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._Id_Categoria = value;
					this.SendPropertyChanged("Id_Categoria");
					this.OnId_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Equipo", DbType="Int")]
		public System.Nullable<int> Id_Equipo
		{
			get
			{
				return this._Id_Equipo;
			}
			set
			{
				if ((this._Id_Equipo != value))
				{
					if (this._Equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EquipoChanging(value);
					this.SendPropertyChanging();
					this._Id_Equipo = value;
					this.SendPropertyChanged("Id_Equipo");
					this.OnId_EquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Laboratorios", DbType="Int")]
		public System.Nullable<int> Id_Laboratorios
		{
			get
			{
				return this._Id_Laboratorios;
			}
			set
			{
				if ((this._Id_Laboratorios != value))
				{
					if (this._Laboratorio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LaboratoriosChanging(value);
					this.SendPropertyChanging();
					this._Id_Laboratorios = value;
					this.SendPropertyChanged("Id_Laboratorios");
					this.OnId_LaboratoriosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_RelacionEquipo_Cat_Lab", Storage="_Categoria", ThisKey="Id_Categoria", OtherKey="Id_Categoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.RelacionEquipo_Cat_Labs.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.RelacionEquipo_Cat_Labs.Add(this);
						this._Id_Categoria = value.Id_Categoria;
					}
					else
					{
						this._Id_Categoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_RelacionEquipo_Cat_Lab", Storage="_Equipo", ThisKey="Id_Equipo", OtherKey="Id_Equipo", IsForeignKey=true)]
		public Equipo Equipo
		{
			get
			{
				return this._Equipo.Entity;
			}
			set
			{
				Equipo previousValue = this._Equipo.Entity;
				if (((previousValue != value) 
							|| (this._Equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipo.Entity = null;
						previousValue.RelacionEquipo_Cat_Labs.Remove(this);
					}
					this._Equipo.Entity = value;
					if ((value != null))
					{
						value.RelacionEquipo_Cat_Labs.Add(this);
						this._Id_Equipo = value.Id_Equipo;
					}
					else
					{
						this._Id_Equipo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laboratorio_RelacionEquipo_Cat_Lab", Storage="_Laboratorio", ThisKey="Id_Laboratorios", OtherKey="Id_Laboratorios", IsForeignKey=true)]
		public Laboratorio Laboratorio
		{
			get
			{
				return this._Laboratorio.Entity;
			}
			set
			{
				Laboratorio previousValue = this._Laboratorio.Entity;
				if (((previousValue != value) 
							|| (this._Laboratorio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Laboratorio.Entity = null;
						previousValue.RelacionEquipo_Cat_Labs.Remove(this);
					}
					this._Laboratorio.Entity = value;
					if ((value != null))
					{
						value.RelacionEquipo_Cat_Labs.Add(this);
						this._Id_Laboratorios = value.Id_Laboratorios;
					}
					else
					{
						this._Id_Laboratorios = default(Nullable<int>);
					}
					this.SendPropertyChanged("Laboratorio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
